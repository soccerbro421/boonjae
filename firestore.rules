rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
  	// Rules for 'GDPR-consent' collection
    match /GDPR-consent/{userId}{

      allow read, write: if request.auth.uid == userId;
      
      
      // Allow read and write access to the 'myRequests' subcollection
      match /myConsent/{document=**} {
        allow read, write: if request.auth.uid == userId;
      }
      
    }
  
  	// Rules for 'reports' collection
    match /reports/{userId}{

      allow read, write: if request.auth.uid == userId;
      
      
      // Allow read and write access to the 'myRequests' subcollection
      match /myReports/{document=**} {
        allow read, write: if request.auth.uid == userId;
      }
      
    }

    // Rules for 'friendRequests' collection
    match /friendRequests/{anything=**}{

      allow read, write: if request.auth != null;
      
    }

    match /users/{userId} {
      
      allow read;
      
      allow write: if request.auth.uid == userId;
      
      match /usersIBlocked/{anything=**} {
        // Only the user can read documents in their private collection
        allow read, write: if request.auth.uid == userId;
      }
      
      match /usersBlockedMe/{anything=**} {
        // Only the user can read documents in their private collection
        allow read, write: if request.auth.uid == userId;
      }

      match /habits/{anything=**} {
        // Only the user can read documents in their private collection
        allow read, write: if request.auth.uid == userId;
      }
      
      // Add this rule to check if the requester is a friend
      function isFriend() {
        return userId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.friends;
      }

      // Allow read access to habits collection if the requester is a friend
      match /habits/{anything=**} {
        allow read: if isFriend();
      }

    }
    

    
  }
}